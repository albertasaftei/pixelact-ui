{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pixelact-menubar",
  "type": "registry:component",
  "title": "Pixelact Menubar",
  "description": "A simple menubar component.",
  "registryDependencies": [
    "menubar"
  ],
  "files": [
    {
      "path": "components/ui/pixelact-ui/menubar/index.tsx",
      "content": "import React from \"react\";\r\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport { Circle } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport \"@/components/ui/pixelact-ui/styles/styles.css\";\r\n\r\nexport const menubarVariants = cva(\r\n  \"shadow-(--pixel-box-shadow) box-shadow-margin\",\r\n  {\r\n    variants: {\r\n      font: {\r\n        normal: \"\",\r\n        pixel: \"pixel-font\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      font: \"pixel\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction MenubarMenu({\r\n  ...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\r\n  return <MenubarPrimitive.Menu {...props} />;\r\n}\r\n\r\nfunction MenubarGroup({\r\n  ...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\r\n  return <MenubarPrimitive.Group {...props} />;\r\n}\r\n\r\nfunction MenubarPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\r\n  return <MenubarPrimitive.Portal {...props} />;\r\n}\r\n\r\nfunction MenubarRadioGroup({\r\n  ...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\r\n  return <MenubarPrimitive.RadioGroup {...props} />;\r\n}\r\n\r\nfunction MenubarSub({\r\n  ...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\r\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\r\n}\r\n\r\nconst Menubar = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root> & {\r\n    font?: \"normal\" | \"pixel\";\r\n  }\r\n>(({ className, font, ...props }, ref) => (\r\n  <MenubarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 items-center space-x-1 rounded-none bg-background p-1\",\r\n      menubarVariants({ font }),\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubar.displayName = MenubarPrimitive.Root.displayName;\r\n\r\nconst MenubarTrigger = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-none px-3 py-1.5 text-sm font-medium text-foreground outline-none focus:border-b-4 focus:border-foreground focus:dark:border-ring focus:border-dashed focus:text-accent-foreground data-[state=open]:border-b-4 data-[state=open]:border-foreground data-[state=open]:dark:border-ring data-[state=open]:text-accent-foreground data-[state=open]:border-dashed border-b-4 border-transparent pt-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName;\r\n\r\nconst MenubarSubTrigger = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <MenubarPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-none px-2 py-1.5 text-sm outline-none h-10 focus:border-y-4 focus:border-foreground focus:dark:border-ring focus:border-dashed focus:text-accent-foreground data-[state=open]:border-y-4 data-[state=open]:border-foreground data-[state=open]:dark:border-ring data-[state=open]:text-accent-foreground data-[state=open]:border-dashed\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <svg\r\n      width=\"50\"\r\n      height=\"50\"\r\n      viewBox=\"0 0 256 256\"\r\n      fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"0.25\"\r\n      aria-label=\"chevron-right\"\r\n      className=\"size-7 ml-auto\"\r\n    >\r\n      <rect x=\"128\" y=\"136\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"112\" y=\"152\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"96\" y=\"72\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"96\" y=\"168\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"144\" y=\"120\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"128\" y=\"104\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n      <rect x=\"112\" y=\"88\" width=\"14\" height=\"14\" rx=\"1\"></rect>\r\n    </svg>\r\n  </MenubarPrimitive.SubTrigger>\r\n));\r\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName;\r\n\r\nconst MenubarSubContent = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent> & {\r\n    font?: \"normal\" | \"pixel\";\r\n  }\r\n>(({ className, font, ...props }, ref) => (\r\n  <MenubarPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-none bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\r\n      menubarVariants({ font }),\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName;\r\n\r\nconst MenubarContent = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content> & {\r\n    font?: \"normal\" | \"pixel\";\r\n  }\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      align = \"start\",\r\n      alignOffset = -4,\r\n      font,\r\n      sideOffset = 8,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => (\r\n    <MenubarPrimitive.Portal>\r\n      <MenubarPrimitive.Content\r\n        ref={ref}\r\n        align={align}\r\n        alignOffset={alignOffset}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"z-50 min-w-[12rem] overflow-hidden rounded-none mt-1 bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\r\n          menubarVariants({ font }),\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </MenubarPrimitive.Portal>\r\n  )\r\n);\r\nMenubarContent.displayName = MenubarPrimitive.Content.displayName;\r\n\r\nconst MenubarItem = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-none px-2 py-1.5 text-sm text-foreground outline-none focus:border-y-4 focus:border-foreground focus:dark:border-ring h-9 focus:border-dashed focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarItem.displayName = MenubarPrimitive.Item.displayName;\r\n\r\nconst MenubarCheckboxItem = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <MenubarPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-none py-1.5 pl-8 pr-2 text-sm outline-none h-9 focus:border-y-4 focus:border-foreground focus:dark:border-ring focus:border-dashed focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <svg\r\n          width=\"50\"\r\n          height=\"50\"\r\n          viewBox=\"0 0 256 256\"\r\n          fill=\"currentColor\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"0.25\"\r\n          aria-label=\"check\"\r\n          className=\"size-7\"\r\n        >\r\n          <rect\r\n            x=\"80\"\r\n            y=\"128\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 80 128)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"96\"\r\n            y=\"144\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 96 144)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"112\"\r\n            y=\"160\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 112 160)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"128\"\r\n            y=\"144\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 128 144)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"144\"\r\n            y=\"128\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 144 128)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"160\"\r\n            y=\"112\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 160 112)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"176\"\r\n            y=\"96\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 176 96)\"\r\n          ></rect>\r\n          <rect\r\n            x=\"192\"\r\n            y=\"80\"\r\n            width=\"14\"\r\n            height=\"14\"\r\n            rx=\"1\"\r\n            transform=\"rotate(90 192 80)\"\r\n          ></rect>\r\n        </svg>\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.CheckboxItem>\r\n));\r\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName;\r\n\r\nconst MenubarRadioItem = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <MenubarPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-none py-1.5 h-9 pl-8 pr-2 text-sm outline-none focus:border-y-4 focus:border-foreground focus:dark:border-ring focus:border-dashed focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.RadioItem>\r\n));\r\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName;\r\n\r\nconst MenubarLabel = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName;\r\n\r\nconst MenubarSeparator = React.forwardRef<\r\n  React.ComponentRef<typeof MenubarPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n));\r\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName;\r\n\r\nconst MenubarShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nMenubarShortcut.displayname = \"MenubarShortcut\";\r\n\r\nexport {\r\n  Menubar,\r\n  MenubarMenu,\r\n  MenubarTrigger,\r\n  MenubarContent,\r\n  MenubarItem,\r\n  MenubarSeparator,\r\n  MenubarLabel,\r\n  MenubarCheckboxItem,\r\n  MenubarRadioGroup,\r\n  MenubarRadioItem,\r\n  MenubarPortal,\r\n  MenubarSubContent,\r\n  MenubarSubTrigger,\r\n  MenubarGroup,\r\n  MenubarSub,\r\n  MenubarShortcut,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/ui/pixelact-ui/menubar.tsx"
    },
    {
      "path": "components/ui/pixelact-ui/styles/styles.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\");\r\n\r\n:root {\r\n  --box-shadow-width: 4px;\r\n  --pixel-box-shadow: calc(-1 * (var(--box-shadow-width))) 0 0 0 black,\r\n    var(--box-shadow-width) 0 0 0 black, 0 var(--box-shadow-width) 0 0 black,\r\n    0 calc(-1 * (var(--box-shadow-width))) 0 0 black;\r\n  --pixel-box-shadow-destructive: calc(-1 * (var(--box-shadow-width))) 0 0 0\r\n      var(--destructive),\r\n    var(--box-shadow-width) 0 0 0 var(--destructive),\r\n    0 var(--box-shadow-width) 0 0 var(--destructive),\r\n    0 calc(-1 * (var(--box-shadow-width))) 0 0 var(--destructive);\r\n  --default-inner-border-color: rgb(200, 200, 200);\r\n}\r\n\r\n.dark {\r\n  --pixel-box-shadow: calc(-1 * (var(--box-shadow-width))) 0 0 0 var(--ring),\r\n    var(--box-shadow-width) 0 0 0 var(--ring),\r\n    0 var(--box-shadow-width) 0 0 var(--ring),\r\n    0 calc(-1 * (var(--box-shadow-width))) 0 0 var(--ring);\r\n}\r\n\r\n.pixel-font {\r\n  font-family: \"Press Start 2P\", system-ui, -apple-system, sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.box-shadow-margin {\r\n  margin: var(--box-shadow-width);\r\n}\r\n",
      "type": "registry:style",
      "target": "components/ui/pixelact-ui/styles/styles.css"
    }
  ]
}